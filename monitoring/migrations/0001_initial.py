# Generated by Django 5.0 on 2024-10-25 19:18

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('initiatives', '0003_alter_task_assigned_to'),
        ('users', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='KPIMetric',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('metric_type', models.CharField(choices=[('BENEFICIARY', 'Number of Beneficiaries'), ('SKILL_DEV', 'Skill Development'), ('EMPLOYMENT', 'Employment Placement'), ('SOCIAL_IMPACT', 'Social Impact'), ('FINANCIAL', 'Financial Metric'), ('CUSTOM', 'Custom Metric')], max_length=20)),
                ('description', models.TextField()),
                ('target_value', models.FloatField(validators=[django.core.validators.MinValueValidator(0.0)])),
                ('current_value', models.FloatField(default=0.0)),
                ('unit_of_measure', models.CharField(max_length=50)),
                ('monitoring_frequency', models.CharField(choices=[('WEEKLY', 'Weekly'), ('MONTHLY', 'Monthly'), ('QUARTERLY', 'Quarterly'), ('ANNUALLY', 'Annually')], default='MONTHLY', max_length=20)),
                ('start_date', models.DateField()),
                ('end_date', models.DateField()),
                ('data_collection_method', models.TextField(help_text='How is this metric collected and measured?')),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initiative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kpi_metrics', to='initiatives.initiative')),
                ('responsible_person', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitored_metrics', to='users.member')),
            ],
            options={
                'ordering': ['metric_type', 'name'],
            },
        ),
        migrations.CreateModel(
            name='MetricProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.FloatField()),
                ('date_recorded', models.DateField()),
                ('notes', models.TextField(blank=True)),
                ('supporting_document', models.FileField(blank=True, upload_to='metric_documents/')),
                ('metric', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='progress_records', to='monitoring.kpimetric')),
                ('recorded_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_recorded_metrics', to='users.member')),
            ],
            options={
                'ordering': ['-date_recorded'],
            },
        ),
        migrations.CreateModel(
            name='MonitoringCheckIn',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('check_in_type', models.CharField(choices=[('WEEKLY', 'Weekly Check-in'), ('MONTHLY', 'Monthly Review'), ('QUARTERLY', 'Quarterly Review')], max_length=20)),
                ('date', models.DateField()),
                ('progress_summary', models.TextField()),
                ('challenges_identified', models.TextField()),
                ('action_items', models.TextField()),
                ('next_steps', models.TextField()),
                ('attachments', models.FileField(blank=True, upload_to='checkin_documents/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('attendees', models.ManyToManyField(related_name='attended_checkins', to='users.member')),
                ('conducted_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conducted_checkins', to='users.member')),
                ('initiative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_checkins', to='initiatives.initiative')),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='MonitoringReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('report_type', models.CharField(choices=[('WEEKLY', 'Weekly Progress Report'), ('MONTHLY', 'Monthly Progress Report'), ('QUARTERLY', 'Quarterly Impact Report'), ('ANNUAL', 'Annual Report')], max_length=20)),
                ('period_start', models.DateField()),
                ('period_end', models.DateField()),
                ('executive_summary', models.TextField()),
                ('program_highlights', models.TextField()),
                ('kpi_updates', models.TextField()),
                ('challenges', models.TextField()),
                ('financial_summary', models.TextField()),
                ('recommendations', models.TextField()),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('REVIEW', 'Under Review'), ('APPROVED', 'Approved'), ('PUBLISHED', 'Published')], default='DRAFT', max_length=20)),
                ('report_file', models.FileField(blank=True, upload_to='monitoring_reports/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('initiative', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitoring_reports', to='initiatives.initiative')),
                ('prepared_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prepared_monitoring_reports', to='users.member')),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='reviewed_monitoring_reports', to='users.member')),
            ],
            options={
                'ordering': ['-period_end', 'report_type'],
            },
        ),
        migrations.CreateModel(
            name='ParticipantFeedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participant_name', models.CharField(max_length=255)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('satisfaction_rating', models.IntegerField(choices=[(1, 'Very Dissatisfied'), (2, 'Dissatisfied'), (3, 'Neutral'), (4, 'Satisfied'), (5, 'Very Satisfied')], validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('most_valuable_aspect', models.TextField()),
                ('improvement_suggestions', models.TextField()),
                ('would_recommend', models.BooleanField(default=True)),
                ('skills_gained', models.TextField(blank=True)),
                ('confidence_improvement', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('employment_status', models.BooleanField(default=False)),
                ('submission_date', models.DateTimeField(auto_now_add=True)),
                ('is_anonymous', models.BooleanField(default=False)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participant_feedback', to='initiatives.event')),
            ],
            options={
                'ordering': ['-submission_date'],
            },
        ),
        migrations.CreateModel(
            name='DataCollectionTemplate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('template_type', models.CharField(choices=[('SURVEY', 'Survey Form'), ('CHECKLIST', 'Monitoring Checklist'), ('ASSESSMENT', 'Impact Assessment'), ('FINANCIAL', 'Financial Report'), ('ATTENDANCE', 'Attendance Sheet')], max_length=20)),
                ('description', models.TextField()),
                ('fields', models.JSONField(help_text='JSON structure defining form fields and their properties')),
                ('instructions', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='created_templates', to='users.member')),
            ],
            options={
                'ordering': ['template_type', 'name'],
                'indexes': [models.Index(fields=['template_type'], name='monitoring__templat_948490_idx'), models.Index(fields=['is_active'], name='monitoring__is_acti_0e8a2d_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='kpimetric',
            index=models.Index(fields=['metric_type'], name='monitoring__metric__3fc91c_idx'),
        ),
        migrations.AddIndex(
            model_name='kpimetric',
            index=models.Index(fields=['monitoring_frequency'], name='monitoring__monitor_69b0c6_idx'),
        ),
        migrations.AddIndex(
            model_name='metricprogress',
            index=models.Index(fields=['date_recorded'], name='monitoring__date_re_b5bb11_idx'),
        ),
        migrations.AddIndex(
            model_name='monitoringcheckin',
            index=models.Index(fields=['check_in_type'], name='monitoring__check_i_bac8ab_idx'),
        ),
        migrations.AddIndex(
            model_name='monitoringcheckin',
            index=models.Index(fields=['date'], name='monitoring__date_92f005_idx'),
        ),
        migrations.AddIndex(
            model_name='monitoringreport',
            index=models.Index(fields=['report_type'], name='monitoring__report__169325_idx'),
        ),
        migrations.AddIndex(
            model_name='monitoringreport',
            index=models.Index(fields=['status'], name='monitoring__status_a4a3d5_idx'),
        ),
        migrations.AddIndex(
            model_name='participantfeedback',
            index=models.Index(fields=['satisfaction_rating'], name='monitoring__satisfa_4443c9_idx'),
        ),
        migrations.AddIndex(
            model_name='participantfeedback',
            index=models.Index(fields=['submission_date'], name='monitoring__submiss_556b8d_idx'),
        ),
    ]
